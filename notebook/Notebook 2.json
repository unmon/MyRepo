{
	"name": "Notebook 2",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "apsparkpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "e76cf7f2-5577-4753-b4b4-9f8a755891e4"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/3e463c50-f4bf-4c51-a9f6-c64fcb641706/resourceGroups/RG_UNMON_MSDN/providers/Microsoft.Synapse/workspaces/azsynapsewp/bigDataPools/apsparkpool",
				"name": "apsparkpool",
				"type": "Spark",
				"endpoint": "https://azsynapsewp.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/apsparkpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "scala"
					}
				},
				"source": [
					"%%spark\r\n",
					"import spark.implicits._\r\n",
					"\r\n",
					"val df = spark.read.option(\"multiline\",\"true\").json(\"abfss://sql@azsynapseacn.dfs.core.windows.net/Data1.json\")\r\n",
					"\r\n",
					"df.printSchema()\r\n",
					"//df.select(\"fun\").show(false)\r\n",
					"//val df2 = df.select(split(col(\"employeeBranch\"), \",\").as(\"Branch\")).drop(\"employeeBranch\")\r\n",
					"\r\n",
					"//df.createOrReplaceTempView(\"vwData\")\r\n",
					"\r\n",
					"//df.createOrReplaceTempView(\"vwDictionary\")\r\n",
					""
				],
				"execution_count": 49
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql   \r\n",
					"\r\n",
					"Select Name, employeeBranch As Branch From vwData"
				],
				"execution_count": 48
			}
		]
	}
}